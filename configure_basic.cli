/subsystem=elytron/jdbc-realm=entry-realm:add(principal-query=[{sql="SELECT PASSWORD FROM USERS WHERE USERNAME = ?", data-source="PostgresDS", clear-password-mapper={password-index=1}},{sql="SELECT R.NAME, 'Roles' FROM ENTRY_ROLES ER INNER JOIN ROLES R ON R.ID = ER.ROLE_ID INNER JOIN USERS U ON U.ID = ER.USER_ID WHERE U.USERNAME = ?", data-source="PostgresDS", attribute-mapping=[{index=1, to=Roles}]}])

/subsystem=elytron/jdbc-realm=business-realm:add(principal-query=[{sql="SELECT PASSWORD FROM USERS WHERE USERNAME = ?", data-source="PostgresDS", clear-password-mapper={password-index=1}},{sql="SELECT R.NAME, 'Roles' FROM BUSINESS_ROLES BR INNER JOIN ROLES R ON R.ID = BR.ROLE_ID INNER JOIN USERS U ON U.ID = BR.USER_ID WHERE U.USERNAME = ?", data-source="PostgresDS", attribute-mapping=[{index=1, to=Roles}]}])

/subsystem=elytron/security-domain=business-security-domain:add(default-realm=business-realm, realms=[{realm=business-realm}],  permission-mapper=default-permission-mapper)

/subsystem=elytron/security-domain=entry-security-domain:add(default-realm=entry-realm, realms=[{realm=entry-realm}], permission-mapper=default-permission-mapper, outflow-security-domains=[business-security-domain])

/subsystem=undertow/application-security-domain=EntryDomain:add(security-domain=entry-security-domain)
/subsystem=ejb3/application-security-domain=BusinessDomain:add(security-domain=business-security-domain)